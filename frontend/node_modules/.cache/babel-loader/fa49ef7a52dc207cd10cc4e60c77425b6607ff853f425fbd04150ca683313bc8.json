{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\nfunction App() {\n  _s();\n  const [image, setImage] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [operation, setOperation] = useState('');\n\n  // Resim yükleme\n  const handleImageChange = e => {\n    const file = e.target.files[0];\n    setImage(file);\n    setOriginalImage(file); // Orijinal resmi kaydediyoruz\n    setImageURL(URL.createObjectURL(file));\n  };\n\n  // Resmi işleme\n  const handleProcessImage = async operationType => {\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('operation', operationType);\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/process', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data'\n        },\n        responseType: 'blob'\n      });\n      const url = URL.createObjectURL(response.data);\n      setImageURL(url); // İşlenmiş resmin URL'sini güncelle\n    } catch (error) {\n      console.error(\"Bir hata oluştu:\", error);\n    }\n  };\n\n  /*\n  // Orijinal resme geri dönme\n  const handleResetImage = () => {\n    setImageURL(URL.createObjectURL(originalImage));\n  };\n   return (\n    <div className=\"App\">\n      <h1>Görsel İşleme Uygulaması</h1>\n      \n      <input type=\"file\" onChange={handleImageChange} />\n      \n      {imageURL && (\n        <div>\n          <h3>İşlenmiş Resim</h3>\n          <img src={imageURL} alt=\"Processed\" style={{ maxWidth: '100%', height: 'auto' }} />\n        </div>\n      )}\n       <div>\n        <button onClick={() => handleProcessImage('negative')}>Negatif</button>\n        <button onClick={() => handleProcessImage('grayscale')}>Grayscale</button>\n        <button onClick={() => handleProcessImage('brightness')}>Parlaklık</button>\n        <button onClick={() => handleProcessImage('red')}>Kırmızı</button>\n        <button onClick={() => handleProcessImage('blue')}>Mavi</button>\n        <button onClick={() => handleProcessImage('green')}>Yeşil</button>\n        <button onClick={() => handleProcessImage('rectangle')}>Dikdörtgen</button>\n        <button onClick={() => handleProcessImage('circle')}>Daire</button>\n        <button onClick={() => handleProcessImage('ellipse')}>Elips</button>\n        <button onClick={() => handleProcessImage('polygon')}>Çokgen</button>\n      </div>\n       {image && (\n        <button onClick={handleResetImage}>Orijinal Resme Dön</button>\n      )}\n    </div> \n  );*/\n}\n_s(App, \"c9oiJcO2ZMpmbNM+VLYVPqWfccA=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","axios","App","_s","image","setImage","originalImage","setOriginalImage","imageURL","setImageURL","operation","setOperation","handleImageChange","e","file","target","files","URL","createObjectURL","handleProcessImage","operationType","formData","FormData","append","response","post","headers","responseType","url","data","error","console","_c","$RefreshReg$"],"sources":["C:/3.SinifDersleri/2.donem/Goruntu_Isleme/VizeProjesi/frontend/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport axios from 'axios';\nimport './App.css';\n\nfunction App() {\n  const [image, setImage] = useState(null);\n  const [originalImage, setOriginalImage] = useState(null);\n  const [imageURL, setImageURL] = useState(null);\n  const [operation, setOperation] = useState('');\n\n  // Resim yükleme\n  const handleImageChange = (e) => {\n    const file = e.target.files[0];\n    setImage(file);\n    setOriginalImage(file); // Orijinal resmi kaydediyoruz\n    setImageURL(URL.createObjectURL(file));\n  };\n\n  // Resmi işleme\n  const handleProcessImage = async (operationType) => {\n    const formData = new FormData();\n    formData.append('image', image);\n    formData.append('operation', operationType);\n\n    try {\n      const response = await axios.post('http://127.0.0.1:5000/process', formData, {\n        headers: {\n          'Content-Type': 'multipart/form-data',\n        },\n        responseType: 'blob',\n      });\n      const url = URL.createObjectURL(response.data);\n      setImageURL(url); // İşlenmiş resmin URL'sini güncelle\n    } catch (error) {\n      console.error(\"Bir hata oluştu:\", error);\n    }\n  };\n\n  /*\n  // Orijinal resme geri dönme\n  const handleResetImage = () => {\n    setImageURL(URL.createObjectURL(originalImage));\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Görsel İşleme Uygulaması</h1>\n      \n      <input type=\"file\" onChange={handleImageChange} />\n      \n      {imageURL && (\n        <div>\n          <h3>İşlenmiş Resim</h3>\n          <img src={imageURL} alt=\"Processed\" style={{ maxWidth: '100%', height: 'auto' }} />\n        </div>\n      )}\n\n      <div>\n        <button onClick={() => handleProcessImage('negative')}>Negatif</button>\n        <button onClick={() => handleProcessImage('grayscale')}>Grayscale</button>\n        <button onClick={() => handleProcessImage('brightness')}>Parlaklık</button>\n        <button onClick={() => handleProcessImage('red')}>Kırmızı</button>\n        <button onClick={() => handleProcessImage('blue')}>Mavi</button>\n        <button onClick={() => handleProcessImage('green')}>Yeşil</button>\n        <button onClick={() => handleProcessImage('rectangle')}>Dikdörtgen</button>\n        <button onClick={() => handleProcessImage('circle')}>Daire</button>\n        <button onClick={() => handleProcessImage('ellipse')}>Elips</button>\n        <button onClick={() => handleProcessImage('polygon')}>Çokgen</button>\n      </div>\n\n      {image && (\n        <button onClick={handleResetImage}>Orijinal Resme Dön</button>\n      )}\n    </div> \n  );*/\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAO,WAAW;AAElB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACM,aAAa,EAAEC,gBAAgB,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAACQ,QAAQ,EAAEC,WAAW,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAM,CAACU,SAAS,EAAEC,YAAY,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;;EAE9C;EACA,MAAMY,iBAAiB,GAAIC,CAAC,IAAK;IAC/B,MAAMC,IAAI,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAC9BX,QAAQ,CAACS,IAAI,CAAC;IACdP,gBAAgB,CAACO,IAAI,CAAC,CAAC,CAAC;IACxBL,WAAW,CAACQ,GAAG,CAACC,eAAe,CAACJ,IAAI,CAAC,CAAC;EACxC,CAAC;;EAED;EACA,MAAMK,kBAAkB,GAAG,MAAOC,aAAa,IAAK;IAClD,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEnB,KAAK,CAAC;IAC/BiB,QAAQ,CAACE,MAAM,CAAC,WAAW,EAAEH,aAAa,CAAC;IAE3C,IAAI;MACF,MAAMI,QAAQ,GAAG,MAAMvB,KAAK,CAACwB,IAAI,CAAC,+BAA+B,EAAEJ,QAAQ,EAAE;QAC3EK,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,YAAY,EAAE;MAChB,CAAC,CAAC;MACF,MAAMC,GAAG,GAAGX,GAAG,CAACC,eAAe,CAACM,QAAQ,CAACK,IAAI,CAAC;MAC9CpB,WAAW,CAACmB,GAAG,CAAC,CAAC,CAAC;IACpB,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kBAAkB,EAAEA,KAAK,CAAC;IAC1C;EACF,CAAC;;EAED;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAIA;AAAC3B,EAAA,CAvEQD,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AAyEZ,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}